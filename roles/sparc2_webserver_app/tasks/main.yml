---

- name: "Add Virtual Environment Comands to .bash_aliases"
  lineinfile: "dest=~/.bash_aliases line={{ item }} create=yes"
  with_items:
    - "export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python"
    - "export WORKON_HOME=~/.venvs"
    - "source /usr/local/bin/virtualenvwrapper.sh"
    - "export PIP_DOWNLOAD_CACHE=$HOME/.pip-downloads"
    - "export DJANGO_SETTINGS_MODULE={{ PRJ_DJ_NAME }}.settings"

- name: "Create Virtual Environment {{ VENV_NAME }}"
  command: "virtualenv {{ VENV_PATH }} -p python2.7 creates={{ VENV_PATH }}"

- name: "Install Cython"
  pip: "name=cython virtualenv={{ VENV_PATH }}"

- name: "Install Requirements"
  pip: "requirements={{ REQS }} virtualenv={{ VENV_PATH }}"

- name: "Install Jenks"
  pip: "name={{ JENKS }} virtualenv={{ VENV_PATH }}"

- name: "GDAL Python Bindings / Download"
  shell: "{{ VENV_PATH }}/bin/pip install --no-install GDAL==1.10.0"

- name: "GDAL Python Bindings / Requirement Check"
  stat: "path={{ VENV_PATH }}/build/GDAL"
  register: gdal_path

- name: "GDAL Python Bindings / Config"
  shell: "sed -i \"s/\\.\\.\\/\\.\\.\\/apps\\/gdal-config/\\/usr\\/bin\\/gdal-config/g\" setup.cfg"
  args:
    chdir: "{{ VENV_PATH }}/build/GDAL"
  when: gdal_path.stat.exists

- name: "GDAL Python Bindings / Install"
  shell: "{{ item }}"
  args:
    chdir: "{{ VENV_PATH }}/build/GDAL"
  when: gdal_path.stat.exists
  with_items:
    - "{{ VENV_PATH }}/bin/python setup.py build_ext --include-dirs=/usr/include/gdal"
    - "{{ VENV_PATH }}/bin/pip install --no-download GDAL==1.10"

- name: "Install Sparc 2.x"
  pip: "name={{ PRJ_REPO_PATH }} virtualenv={{ VENV_PATH }} editable=yes"
  args:
    chdir: "{{ PRJ_PARENT_PATH }}"
